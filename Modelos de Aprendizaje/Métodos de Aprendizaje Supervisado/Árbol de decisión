# Cargar las librerías necesarias
library(rpart)       # Para crear el árbol de decisión
library(rpart.plot)  # Para graficar el árbol
library(caret)       # Para particionar los datos y métricas de rendimiento

# Cargar el conjunto de datos iris
data(iris)

# Visualizar las primeras filas del conjunto de datos
head(iris)

# Dividir el conjunto de datos en entrenamiento (70%) y prueba (30%)
set.seed(123)  # Fijar la semilla para reproducibilidad
train_index <- createDataPartition(iris$Species, p = 0.7, list = FALSE)

train_data <- iris[train_index, ]
test_data <- iris[-train_index, ]

# Separar las características (X) y las etiquetas (y)
train_X <- train_data[, -5]  # Columnas 1 a 4 (características)
train_y <- train_data[, 5]   # Columna 5 (etiqueta)

test_X <- test_data[, -5]
test_y <- test_data[, 5]

# Crear el modelo de árbol de decisión
tree_model <- rpart(Species ~ ., data = train_data, method = "class")

# Resumen del modelo
summary(tree_model)

# Realizar predicciones sobre el conjunto de prueba
predictions <- predict(tree_model, test_data, type = "class")

# Evaluar el rendimiento del modelo
conf_matrix <- confusionMatrix(predictions, test_y)
print(conf_matrix)

# Métricas de evaluación
cat("Accuracy: ", conf_matrix$overall['Accuracy'], "\n")
cat("Kappa: ", conf_matrix$overall['Kappa'], "\n")

# Graficar el árbol de decisión
rpart.plot(tree_model, type = 3, extra = 102, fallen.leaves = TRUE, main = "Árbol de Decisión - Modelo de Clasificación")
