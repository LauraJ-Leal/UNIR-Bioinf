##Preparación de las bases de datos para modelos de clasificación##
data <- read.csv('data.csv')
str(data) #Revisión de datos
summary(data)

data$Diagnosis <- as.factor(data$Diagnosis)

library(caret) #Cargar librería para el entrenamiento de los datos

##Determinar cómo se partirán los datos para el entrenamiento y el testeo
set.seed(123)

trainIndex <- createDataPartition(data$Diagnosis, p = 0.75, list = FALSE)
trainData <- data[trainIndex,]
testData <- data[-trainIndex,]

##Instalación de librerías para modelos de Machine Learning##
installed.packages(c('glmnet', 'tidyverse', 'rpart', 'rpart.plot', 'rattle', 'pROC', 'PRROC', 'MASS', 'klaR', 'gridExtra'))

#Cargar librerías para modedlos de Machine Learning##
library(glmnet) # ElasticNet
library(tidyverse)
library(pROC) # ROC
library(PRROC) # PR-Curve
library(gridExtra) # juntar los gráficos

####--Implementación de modelos de Machine Learning--###

##kNN
knnModel <- train(Diagnosis ~ .,
                  data = trainData,
                  method = "knn",
                  trControl = trainControl(method = "cv", number = 10),
                  preProcess = c("center", "scale"),
                  tuneLength = 30)

knnModel

plot(knnModel)

# Realizar predicciones en el conjunto de prueba utilizando el modelo entrenado
predictions <- predict(knnModel, newdata = testData )
predictions

# Evaluar la precisión del modelo utilizando la matriz de confusión
confusionMatrix(predictions, testData$Diagnosis)


# Obtener probabilidades
probabilities_knn <- predict(knnModel, newdata = testData, type = "prob")
probabilities_knn
